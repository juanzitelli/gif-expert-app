{"version":3,"sources":["components/AddCategory.jsx","controllers/gifs-controller.js","hooks/useFetchGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","components/GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","prevCategories","console","log","type","name","id","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","map","title","images","downsized_medium","useFecthGifs","loading","gifs","setGifs","useEffect","then","GifGridItem","className","src","alt","GifGrid","useFetchGifs","image","key","GifExpertApp","categories","role","aria-label","Math","random","ReactDOM","render","document","getElementById"],"mappings":"6MAgCeA,EA7BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAENC,mBAAS,IAFH,mBAEnCC,EAFmC,KAEvBC,EAFuB,KAY1C,OACC,0BAAMC,SAPc,SAACC,GACrBA,EAAMC,iBACNJ,GAAcF,GAAc,SAAAO,GAAc,OAAKL,GAAL,mBAAoBK,OAC9DC,QAAQC,IAAI,gBAKX,2BACCC,KAAK,OACLC,KAAK,WACLC,GAAG,WACHC,MAAOX,EACPY,SAfuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAAgBZ,EAAcY,EAAOF,Y,uBCPnDG,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACfC,EADe,gDACgCC,UACnDH,GAFmB,+DAIEI,MAAMF,GAJR,cAIfG,EAJe,gBAKEA,EAASC,OALX,uBAKbC,EALa,EAKbA,KALa,kBAMdA,EAAKC,KACV,YAOE,MAAO,CACLb,GAFE,EALJA,GAQEc,MAHE,EAJJA,MAQEP,IAJE,EAHJQ,OACEC,iBAAoBT,SAXL,2CAAH,sDCyBLU,EArBM,SAACZ,GAAc,IAAD,EACThB,mBAAS,CAC/BuB,KAAM,GACNM,SAAS,IAHsB,mBAC1BC,EAD0B,KACpBC,EADoB,KAejC,OATAC,qBAAU,WACRjB,EAAQC,GAAUiB,MAAK,SAACP,GACtBK,EAAQ,CACNR,KAAMG,EACNG,SAAS,SAGZ,CAACb,IAEGc,GCVMI,EAPK,SAAC,GAAD,IAAET,EAAF,EAAEA,MAAMP,EAAR,EAAQA,IAAR,OAEnB,yBAAKiB,UAAU,iDACd,yBAAKC,IAAKlB,EAAKmB,IAAKZ,IACpB,2BAAIA,KCoBSa,EAnBC,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAAe,EAECuB,EAAavB,GAAjCU,EAFmB,EAEzBH,KAAcM,EAFW,EAEXA,QAEtB,OACC,6BACC,wBAAIlB,GAAG,YACLK,GAGF,uBAAGmB,UAAU,oCAAoCN,GAAW,cAA5D,KAEA,yBAAKM,UAAU,sEACbT,EAAOF,KAAI,SAACgB,GAAD,OAAW,kBAAC,EAAD,eAAaC,IAAKD,EAAM7B,IAAQ6B,UCQ5CE,EAxBM,WAAO,IAAD,EACU1C,mBAAS,IADnB,mBACnB2C,EADmB,KACP5C,EADO,KAG1B,OACC,oCACC,yBAAKoC,UAAU,mDACd,4CAAiB,0BAAMS,KAAK,MAAMC,aAAW,SAA5B,gBAAjB,KAEA,6BACC,qCACA,kBAAC,EAAD,CAAa9C,cAAeA,MAG9B,6BAEE4C,EAAWnB,KAAI,SAAAR,GAAQ,OAAI,kBAAC,EAAD,CAASyB,IAAKK,KAAKC,SAAU/B,SAAUA,UCdvEgC,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.6542b539.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n\t\n\tconst [inputValue, setInputValue] = useState(\"\");\n\n\tconst handleInputChange = ({ target }) => setInputValue(target.value)\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault()\n\t\tinputValue && setCategories(prevCategories => [inputValue, ...prevCategories])\n\t\tconsole.log(\"Submitted!\")\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"category\"\n\t\t\t\tid=\"category\"\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={handleInputChange}\n\t\t\t/>\n\t\t</form>\n\t)\n}\n\nAddCategory.propTypes = {\n\tsetCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","export const getGifs = async (category) => {\n  const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=fSDvxCITLTqhcjPdBgL340UgQHT8xi26`;\n  const response = await fetch(url);\n  const { data } = await response.json();\n  return data.map(\n    ({\n      id,\n      title,\n      images: {\n        downsized_medium: { url },\n      },\n    }) => {\n      return {\n        id,\n        title,\n        url,\n      };\n    }\n  );\n};\n","import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { getGifs } from \"../controllers/gifs-controller\";\n\nconst useFecthGifs = (category) => {\n  const [gifs, setGifs] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((images) => {\n      setGifs({\n        data: images,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return gifs; /* {\n\t\tdata: images,\n\t\tloading: false\n\t} */\n};\n\nexport default useFecthGifs;\n","import React from 'react'\n\nconst GifGridItem = ({title,url}) =>\n\n\t<div className=\"card animate__animated animate__bounceInRight\">\n\t\t<img src={url} alt={title}/>\n\t\t<p>{title}</p>\n\t</div>\n\nexport default GifGridItem\n","// Dependencies\nimport React from 'react'\n// Hooks\nimport useFetchGifs from '../hooks/useFetchGifs'\n// Components\nimport GifGridItem from './GifGridItem'\n\nconst GifGrid = ({ category }) => {\n\n\tconst { data: images, loading } = useFetchGifs(category);\n\n\treturn (\n\t\t<div>\n\t\t\t<h3 id=\"category\">\n\t\t\t\t{category}\n\t\t\t</h3>\n\n\t\t\t<p className=\"animate__animated animate__flash\">{loading && 'Loading... '} </p>\n\n\t\t\t<div className=\"cardsContainer animate__animated animate__fadeIn animate__delay-2s\">\n\t\t\t\t{images.map((image) => <GifGridItem key={image.id} {...image} />)}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default GifGrid\n","import React, { useState } from 'react'\nimport AddCategory from './AddCategory'\nimport GifGrid from './GifGrid'\n\nconst GifExpertApp = () => {\n\tconst [categories, setCategories] = useState([])\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"appHeader animate__animated animate__backInDown\">\n\t\t\t\t<h2>GifExpertApp <span role=\"img\" aria-label=\"emoji\">ðŸ˜Ž</span> </h2>\n\n\t\t\t\t<div>\n\t\t\t\t\t<i>Search</i>\n\t\t\t\t\t<AddCategory setCategories={setCategories} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tcategories.map(category => <GifGrid key={Math.random()} category={category} />)\n\t\t\t\t\t//CAMBIAR ESTE MATH RANDOM POR ID\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t</>\n\t)\n}\n\nexport default GifExpertApp\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport GifExpertApp from \"./components/GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}